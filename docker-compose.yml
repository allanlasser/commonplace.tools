services:

  db:
    image: postgis/postgis
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped

  nginx-proxy:
    container_name: nginx-proxy
    build:
      context: .
      dockerfile: ./config/nginx/Dockerfile
    volumes:
      - certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /etc/acme.sh
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - static:/static
    ports:
      - '80:80'
      - '443:443'
    restart: always
  
  letsencrypt:
    image: nginxproxy/acme-companion
    environment:
      - LETSENCRYPT_EMAIL=chris.hartley@anymouse.org
      - LETSENCRYPT_HOST=www.commonplace.tools,api.commonplace.tools,commonplace.tools
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy
    restart: unless-stopped
    depends_on:
      - nginx-proxy
  
  backend:
    build: 
      context: .
      dockerfile: ./config/backend/Dockerfile
    command: ./config/backend/start.sh
    volumes:
      - .:/code
      - static:/static
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - nginx-proxy
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ./next-frontend
      dockerfile: ./Dockerfile
    depends_on:
      - nginx-proxy
    environment:
      - API_URL=http://backend:8000
  
  ####
  # LOCAL DEVELOPMENT SERVICES
  ####
  
  nginx-proxy-local:
    container_name: nginx-proxy-local
    build:
      context: .
      dockerfile: ./config/nginx/Dockerfile-local
    volumes:
      - certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /etc/acme.sh
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - static:/static
    ports:
      - '80:80'
      - '443:443'
    restart: always

  backend-local:
    build: 
      context: .
      dockerfile: ./config/backend/Dockerfile-local
    command: ./config/backend/start-local.sh
    volumes:
      - .:/code
      - static:/static
    expose:
      - "8000"
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - nginx-proxy-local
    restart: unless-stopped

  frontend-local:
    build:
      context: ./next-frontend
      dockerfile: ./Dockerfile
    expose:
      - "3000"
    ports:
      - "3000:3000"
    depends_on:
      - backend-local
      - nginx-proxy-local
    environment:
      - API_URL=http://backend-local:8000

volumes:
  certs:
  db:
  static: